# ============================================================================
# INSTRU√á√ïES PARA CRIAR O INSTALADOR
# ============================================================================

"""
PASSO 1: Instalar depend√™ncias necess√°rias
pip install pyinstaller pandas

PASSO 2: Criar arquivo spec personalizado (salvar como 'article_analyzer.spec')
"""

# article_analyzer.spec
spec_content = """
# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['article_analyzer.py'],
    pathex=[],
    binaries=[],
    datas=[],
    hiddenimports=[],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='AnalisadorArtigos',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    icon='icon.ico'  # Opcional: adicione um √≠cone
)
"""

print("1. Salve o conte√∫do acima como 'article_analyzer.spec'")
print("2. Execute: pyinstaller article_analyzer.spec")

# ============================================================================
# ARQUIVO PARA BUILD AUTOM√ÅTICO
# ============================================================================

# build.py - Script para automatizar a cria√ß√£o do execut√°vel
build_script = '''
import os
import subprocess
import shutil
import sys

def build_executable():
    print("üî® Iniciando build do execut√°vel...")
    
    # Verifica se os arquivos necess√°rios existem
    if not os.path.exists('article_analyzer.py'):
        print("‚ùå Erro: arquivo article_analyzer.py n√£o encontrado!")
        return False
    
    # Limpa builds anteriores
    if os.path.exists('dist'):
        print("üßπ Limpando builds anteriores...")
        shutil.rmtree('dist')
    if os.path.exists('build'):
        shutil.rmtree('build')
    
    try:
        # Executa o PyInstaller
        print("üì¶ Criando execut√°vel com PyInstaller...")
        result = subprocess.run([
            'pyinstaller', 
            '--onefile',
            '--windowed',
            '--name=AnalisadorArtigos',
            '--clean',
            'article_analyzer.py'
        ], check=True)
        
        if os.path.exists('dist/AnalisadorArtigos.exe'):
            print("‚úÖ Execut√°vel criado com sucesso!")
            print("üìÅ Localiza√ß√£o: dist/AnalisadorArtigos.exe")
            return True
        else:
            print("‚ùå Erro: execut√°vel n√£o foi criado")
            return False
            
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro no PyInstaller: {e}")
        return False
    except FileNotFoundError:
        print("‚ùå Erro: PyInstaller n√£o encontrado. Execute: pip install pyinstaller")
        return False

if __name__ == "__main__":
    success = build_executable()
    if success:
        print("\\nüéâ Build conclu√≠do com sucesso!")
        print("üìã Pr√≥ximos passos:")
        print("   1. Teste o execut√°vel em dist/AnalisadorArtigos.exe")
        print("   2. Crie o instalador com o Inno Setup (opcional)")
    else:
        print("\\n‚ùå Build falhou. Verifique os erros acima.")
    
    input("\\nPressione Enter para sair...")
'''

print("\n" + "="*60)
print("SCRIPT DE BUILD AUTOM√ÅTICO")
print("="*60)
print(build_script)

# ============================================================================
# SCRIPT INNO SETUP PARA INSTALADOR PROFISSIONAL
# ============================================================================

inno_setup_script = """
; Script do Inno Setup para Analisador de Artigos
; Salve como: installer.iss

[Setup]
AppName=Analisador de Artigos e Livros
AppVersion=1.0.0
AppPublisher=Seu Nome
AppPublisherURL=https://seusite.com
AppSupportURL=https://seusite.com/suporte
AppUpdatesURL=https://seusite.com/updates
DefaultDirName={autopf}\\Analisador de Artigos
DefaultGroupName=Analisador de Artigos
AllowNoIcons=yes
LicenseFile=license.txt
OutputDir=installer_output
OutputBaseFilename=AnalisadorArtigos_Setup
SetupIconFile=icon.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
PrivilegesRequired=lowest

[Languages]
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\\BrazilianPortuguese.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "dist\\AnalisadorArtigos.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "README.md"; DestDir: "{app}"; Flags: ignoreversion
Source: "license.txt"; DestDir: "{app}"; Flags: ignoreversion

[Icons]
Name: "{group}\\Analisador de Artigos"; Filename: "{app}\\AnalisadorArtigos.exe"
Name: "{group}\\{cm:UninstallProgram,Analisador de Artigos}"; Filename: "{uninstallexe}"
Name: "{autodesktop}\\Analisador de Artigos"; Filename: "{app}\\AnalisadorArtigos.exe"; Tasks: desktopicon

[Run]
Filename: "{app}\\AnalisadorArtigos.exe"; Description: "{cm:LaunchProgram,Analisador de Artigos}"; Flags: nowait postinstall skipifsilent
"""

print("\n" + "="*60)
print("SCRIPT INNO SETUP PARA INSTALADOR")
print("="*60)
print(inno_setup_script)

# ============================================================================
# ARQUIVO README PARA DISTRIBUI√á√ÉO
# ============================================================================

readme_content = """
# Analisador de Artigos e Livros

## Descri√ß√£o
Software desktop para an√°lise de listas de artigos cient√≠ficos e livros acad√™micos em formato CSV.

## Funcionalidades
- ‚úÖ Valida√ß√£o autom√°tica de arquivos CSV
- üìä Contagem total de t√≠tulos
- üìã Listagem completa de todos os t√≠tulos
- üîç Detec√ß√£o de duplicados (t√≠tulo + autor)
- üì§ Exporta√ß√£o para CSV (lista completa e duplicados)

## Como usar
1. Execute o programa
2. Clique em "Procurar" para selecionar um arquivo CSV
3. Clique em "Analisar Arquivo"
4. Visualize os resultados
5. Exporte as listas conforme necess√°rio

## Formato do arquivo CSV
O arquivo deve conter colunas com t√≠tulos e autores. Exemplos de nomes aceitos:
- T√≠tulos: "title", "t√≠tulo", "titulo", "nome"
- Autores: "author", "autor", "authors", "autores"

## Requisitos do sistema
- Windows 10 ou superior
- N√£o requer instala√ß√£o de Python ou outras depend√™ncias

## Vers√£o
1.0.0

## Suporte
Para d√∫vidas ou problemas, entre em contato atrav√©s do email: seuemail@exemplo.com
"""

print("\n" + "="*60)
print("ARQUIVO README.MD")
print("="*60)
print(readme_content)

# ============================================================================
# LICEN√áA SIMPLES
# ============================================================================

license_content = """
LICEN√áA DE SOFTWARE

Copyright (c) 2025 Analisador de Artigos e Livros

Por meio desta, √© concedida permiss√£o, gratuitamente, a qualquer pessoa que obtenha uma c√≥pia deste software e arquivos de documenta√ß√£o associados (o "Software"), para usar o Software sem restri√ß√µes, incluindo, sem limita√ß√£o, os direitos de usar, copiar, modificar, mesclar, publicar, distribuir, sublicenciar e/ou vender c√≥pias do Software, sujeito √†s seguintes condi√ß√µes:

O aviso de copyright acima e este aviso de permiss√£o devem ser inclu√≠dos em todas as c√≥pias ou partes substanciais do Software.

O SOFTWARE √â FORNECIDO "COMO EST√Å", SEM GARANTIA DE QUALQUER TIPO, EXPRESSA OU IMPL√çCITA, INCLUINDO, MAS N√ÉO SE LIMITANDO √ÄS GARANTIAS DE COMERCIABILIDADE, ADEQUA√á√ÉO A UM PROP√ìSITO ESPEC√çFICO E N√ÉO VIOLA√á√ÉO. EM NENHUM CASO OS AUTORES OU DETENTORES DE COPYRIGHT SER√ÉO RESPONS√ÅVEIS POR QUALQUER REIVINDICA√á√ÉO, DANOS OU OUTRAS RESPONSABILIDADES, SEJA EM A√á√ÉO DE CONTRATO, DELITO OU DE OUTRA FORMA, DECORRENTES DE, OU EM CONEX√ÉO COM O SOFTWARE OU O USO OU OUTRAS NEGOCIA√á√ïES NO SOFTWARE.
"""

print("\n" + "="*60)
print("ARQUIVO LICENSE.TXT")
print("="*60)
print(license_content)